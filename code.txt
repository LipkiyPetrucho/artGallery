# Содержимое проекта art_gallery

# art_gallery\.env
# Основные настройки
# TODO: поменять в продакшене
SECRET_KEY=django-insecure-f0$k2z4^hxb+&-5l))2n6ap*xb&2q)bh5#^epav0#tnm+@e6o2
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1

# Настройки базы данных
DB_NAME=art_gallery
DB_USER=art
DB_PASSWORD=pifpaf
DB_HOST=localhost
DB_PORT=5432

# Настройки электронной почты
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.yandex.ru
EMAIL_PORT=465
EMAIL_USE_SSL=True
EMAIL_USE_TLS=False
EMAIL_HOST_USER=pafos.light@yandex.ru
EMAIL_HOST_PASSWORD=frwdujstvajvofmt
DEFAULT_FROM_EMAIL=pafos.light@yandex.ru
ADMINS=pafos.light:pafos.light@yandex.ru

# Email художника для получения сообщений
ARTIST_EMAIL=pafos.light@yandex.ru


# art_gallery\artworks\models.py
from django.db import models
from django.urls import reverse


class Painting(models.Model):
    # TODO: STATUS_CHOICES = [
    #     ('available', 'Available'),
    #     ('sold', 'Sold'),
    #     ('reserved', 'Reserved'),]
    # TODO: author = models.CharField(max_length=100, blank=True, null=True)
    title = models.CharField(max_length=200)
    created_at = models.DateField()
    upload_date = models.DateTimeField(auto_now_add=True)
    material = models.CharField(max_length=100)
    dimensions = models.CharField(max_length=50)
    image = models.ImageField(upload_to="paintings/")  # TODO:   /%Y/%m/%d/
    description = models.TextField(blank=True)
    category = models.CharField(max_length=100, blank=True, null=True)
    # TODO: tags = models.CharField(max_length=200, blank=True)
    # TODO: price = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    # TODO: status = models.CharField(max_length=10, choices=STATUS_CHOICES, default='available')

    def __str__(self):
        return self.title

    def get_creation_year(self):
        """Возвращает год создания картины."""
        return self.created_at.year

    def get_absolute_url(self):
        return reverse("artworks:detail", args=[self.id])


# art_gallery\artworks\urls.py
from django.urls import path
from .views import (
    about_view,
    gallery_view,
    blog_view,
    contacts_view,
    painting_detail,
    free_works,
)

app_name = "artworks"

urlpatterns = [
    path("about/", about_view, name="about"),
    path("gallery/", gallery_view, name="gallery"),
    path("free-works/", free_works, name="free_works"),
    path("painting/<int:id>/", painting_detail, name="detail"),
    path("blog/", blog_view, name="blog"),
    path("contacts/", contacts_view, name="contacts"),
]


# art_gallery\artworks\forms.py
from django import forms


class ContactForm(forms.Form):
    name = forms.CharField(
        max_length=100,
        required=True,
        widget=forms.TextInput(attrs={'placeholder': 'Имя'})
    )
    email = forms.EmailField(
        required=True,
        widget=forms.EmailInput(attrs={'placeholder': 'E-mail'}),
        error_messages={
            'invalid': 'Пожалуйста, введите корректный адрес электронной почты.'
        }
    )
    message = forms.CharField(
        widget=forms.Textarea(attrs={'placeholder': 'Ваше сообщение', 'rows': 5}),
        required=True
    )
    attachment = forms.FileField(
        required=False,
        widget=forms.ClearableFileInput(attrs={'class': 'file-input'})
    )

    def clean_attachment(self):
        attachment = self.cleaned_data.get('attachment', False)
        if attachment:
            if attachment.size > 4 * 1024 * 1024:
                raise forms.ValidationError("Размер файла не должен превышать 4MB.")
            if not attachment.content_type in ["image/jpeg", "image/png", "application/pdf"]:
                raise forms.ValidationError("Разрешены только файлы JPEG, PNG и PDF.")
        return attachment


# art_gallery\artworks\views.py
from django.conf import settings
from django.contrib import messages
from django.core.mail import EmailMessage
from django.http import HttpResponse
from django.shortcuts import render, get_object_or_404, redirect

from artworks.forms import ContactForm
from artworks.models import Painting


def home_view(request):
    return render(request, "artworks/home.html")


def about_view(request):
    return render(request, "artworks/about.html")


def gallery_view(request):
    paintings = Painting.objects.all()
    return render(request, "artworks/gallery.html", {"paintings": paintings})


def blog_view(request):
    return HttpResponse("Страница 'Блог' в разработке.")


def contacts_view(request):
    if request.method == 'POST':
        form = ContactForm(request.POST, request.FILES)
        if form.is_valid():
            name = form.cleaned_data['name']
            from_email = form.cleaned_data['email']
            message = form.cleaned_data['message']
            attachment = form.cleaned_data.get('attachment')

            subject = f'Новое сообщение от {name}'
            body = f'Имя: {name}\nEmail: {from_email}\n\nСообщение:\n{message}'

            email = EmailMessage(
                subject=subject,
                body=body,
                from_email=settings.DEFAULT_FROM_EMAIL,
                to=[settings.ARTIST_EMAIL],
                reply_to=[from_email],
            )

            if attachment:
                email.attach(attachment.name, attachment.read(), attachment.content_type)

            try:
                email.send()
                messages.success(request, 'Ваше сообщение успешно отправлено!')
                return redirect('artworks:contacts')
            except Exception as e:
                messages.error(request, 'Произошла ошибка при отправке сообщения. Пожалуйста, попробуйте позже.')
    else:
        form = ContactForm()

    return render(request, "artworks/contacts.html", {'form': form})


def free_works(request):
    paintings = Painting.objects.all()
    return render(request, "artworks/free_works.html", {"paintings": paintings})


def painting_detail(request, id):
    painting = get_object_or_404(Painting, id=id)
    return render(request, "artworks/detail.html", {"painting": painting})


# art_gallery\art_gallery\context_processors.py
from datetime import datetime


def current_year(request):
    return {"current_year": datetime.now().year}


# art_gallery\art_gallery\settings.py
import os
from pathlib import Path

from dotenv import load_dotenv

BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, '.env'))

SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = os.getenv('DEBUG', 'False') == 'True'
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    # apps
    "artworks.apps.ArtworksConfig",
    # libs
    "easy_thumbnails",
    "django_extensions",  # TODO: remove
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "art_gallery.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "art_gallery.context_processors.current_year",
            ],
        },
    },
]

WSGI_APPLICATION = "art_gallery.wsgi.application"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv('DB_NAME'),
        "USER": os.getenv('DB_USER'),
        "PASSWORD": os.getenv('DB_PASSWORD'),
        "HOST": os.getenv('DB_HOST', 'localhost'),
        "PORT": os.getenv('DB_PORT', '5432'),
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Международные настройки
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

STATIC_URL = "/static/"
STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# easy_thumbnails
THUMBNAIL_DEBUG = True # TODO: change
THUMBNAIL_ALIASES = {
    '': {
        'default': {
            'size': (300, 300),
            'crop': True,
        },
    },
}

THUMBNAIL_BASEDIR = 'thumbnails'

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# email settings TODO: необходимо уточнить e-mail.
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# provider settings
EEMAIL_BACKEND = os.getenv('EMAIL_BACKEND')
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', 587))
EMAIL_USE_SSL = os.getenv('EMAIL_USE_SSL', 'False') == 'True'
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')
SERVER_EMAIL = EMAIL_HOST_USER
EMAIL_ADMIN = EMAIL_HOST_USER
ADMINS = [
    tuple(admin.split(':')) for admin in os.getenv('ADMINS', '').split(',') if admin
]

# Email художника для получения сообщений
ARTIST_EMAIL = os.getenv('ARTIST_EMAIL')


# art_gallery\art_gallery\urls.py
from django.conf import settings
from django.conf.urls.static import static
from django.contrib import admin
from django.urls import path, include

from artworks.views import home_view

urlpatterns = [
    path("admin/", admin.site.urls),
    path("", home_view, name="home"),
    path("artworks/", include("artworks.urls")),
]
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)


# art_gallery\templates\base.html
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="сайт художника из города Самара">
    <title>{% block title %}Главная{% endblock %}</title>
    {% load static %}

    <!-- Подключение шрифтов -->

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap" rel="stylesheet">
    <!-- Подключение Font Awesome --> <!--TODO: нужно ли поменять в продакшене?-->
    <link href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" rel="stylesheet">
    <link rel="stylesheet" href="{% static 'css/styles.css' %}">
</head>
<body>
    <header class="hero">
        <h1>Марина Липатова</h1>
        <p>живопись & графика</p>

        <nav class="main-menu">
            <ul>
                <li><a href="{% url 'home' %}">Главная</a></li>
                <li><a href="{% url 'artworks:about' %}">Об авторе</a></li>
                <li><a href="{% url 'artworks:gallery' %}">Галерея</a></li>
                <li><a href="{% url 'artworks:blog' %}">Блог</a></li>
                <li><a href="{% url 'artworks:contacts' %}">Контакты</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <div class="container">
            <!-- Блок для сообщений -->
            {% if messages %}
                <ul class="messages">
                    {% for message in messages %}
                        <li{% if message.tags %} class="{{ message.tags }}"{% endif %}>
                            {{ message }}
                        </li>
                    {% endfor %}
                </ul>
            {% endif %}

            {% block content %}
            {% endblock %}
        </div>
    </main>

    <footer>
        <hr class="footer-separator">
        <ul class="social-links">
            <li>
                <a href="https://vk.com/marina_lipatova_art" target="_blank" aria-label="VK">
                    <i class="fab fa-vk"></i>
                </a>
            </li>
            <li>
                <a href="https://www.instagram.com/marina_lipa_art?igsh=aGcwMXp1N2R5Zmdnp" target="_blank" aria-label="Instagram">
                    <i class="fab fa-instagram"></i>
                </a>
            </li>
            <li>
                <a href="https://t.me/marina_lipatova_art" target="_blank" aria-label="Telegram">
                    <i class="fab fa-telegram"></i>
                </a>
            </li>
        </ul>
        <p>© Marina Lipatova ART {{ current_year }}</p>
    </footer>
</body>
</html>


# art_gallery\templates\artworks\about.html
{% extends 'base.html' %}
{% load static %}
{% load thumbnail %}

{% block title %}Об авторе{% endblock %}

{% block content %}
<section class="about-author">
    <div class="author-photo">
        <img src="{% static 'img/author.png' %}" alt="Фото автора">
    </div>
    <div class="author-info">
        <h1>Марина Липатова</h1>
            <p>«Не делаю мир лучше, он и без меня прекрасен. Мой стиль работы — импрессионизм. Он близок мне: через него я раскрываюсь как эстет, как наблюдатель.</p>
            <p>Впечатляюсь моментом и переношу его на холст, перемешивая с краской своё настроение, мысли и чуточку души.</p>
            <p>Мои картины вписаны в интерьеры домов в разных частях земли, это греет и здорово вдохновляет на новые работы.</p>
            <p>Хочется расти, учиться у лучших, бесконечно экспериментировать и заявлять о себе миру.</p>
            <p>Гармоничные и спокойные темы и цвета — мой намеренный выбор. Они не будоражат сознание, наоборот, умиротворяют и дарят тёплую энергию пространства дома.</p>
            <p>Самое приятное для меня — писать на заказ. Поймать настроение человека, стиль его образа, стиль жизни и пробовать воплощать. Обожаю дарить свои работы друзьям, к моему счастью, ни одна из них не пылится за шкафом.</p>
            <p>Удивлять, иногда восхищать, вызывать радость своими работами — это моя любовь навсегда.»</p>
        <h2>Список выставок</h2>
        <ul>
            <li>2019</li>
            <li>2022</li>
            <li>2023</li>
            <li>2024</li>
        </ul>
    </div>
</section>
{% endblock %}


# art_gallery\templates\artworks\blog.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>

</body>
</html>

# art_gallery\templates\artworks\contacts.html
{% extends 'base.html' %}
{% load static %}

{% block title %}Контакты{% endblock %}

{% block content %}
    <header class="hero">
        <h1>Контакты художника</h1>
    </header>

    <main class="contacts">
        <!-- Социальные ссылки -->
        <section class="social-media">
            <div class="social-icons">
                <a href="https://vk.com/marina_lipatova_art" target="_blank" aria-label="VK">
                    <i class="fab fa-vk"></i>
                </a>
                <a href="https://www.instagram.com/marina_lipa_art?igsh=aGcwMXp1N2R5Zmdnp" target="_blank" aria-label="Instagram">
                    <i class="fab fa-instagram"></i>
                </a>
                <a href="https://t.me/marina_lipatova_art" target="_blank" aria-label="Telegram">
                    <i class="fab fa-telegram"></i>
                </a>
            </div>

            <a class="email-button" href="mailto:pafos.light@yandex.ru" target="_self">pafos.light@yandex.ru</a>

        </section>

        <!-- Форма обратной связи -->
        <section class="contact-form">
            <p>или</p>
            <form action="{% url 'artworks:contacts' %}" method="post" enctype="multipart/form-data">
                {% csrf_token %}
                
                <!-- Отображение сообщений -->
                {% if messages %}
                    <ul class="messages">
                        {% for message in messages %}
                            <li{% if message.tags %} class="{{ message.tags }}"{% endif %}>
                                {{ message }}
                            </li>
                        {% endfor %}
                    </ul>
                {% endif %}
                
                <!-- Поля формы -->
                <div>
                    {{ form.name.label_tag }}
                    {{ form.name }}
                    {% if form.name.errors %}
                        <div class="error">{{ form.name.errors }}</div>
                    {% endif %}
                </div>
                <div>
                    {{ form.email.label_tag }}
                    {{ form.email }}
                    {% if form.email.errors %}
                        <div class="error">{{ form.email.errors }}</div>
                    {% endif %}
                </div>
                <div>
                    {{ form.message.label_tag }}
                    {{ form.message }}
                    {% if form.message.errors %}
                        <div class="error">{{ form.message.errors }}</div>
                    {% endif %}
                </div>
                <div>
                    {{ form.attachment.label_tag }}
                    {{ form.attachment }}
                    {% if form.attachment.errors %}
                        <div class="error">{{ form.attachment.errors }}</div>
                    {% endif %}
                </div>
                <button type="submit">Отправить</button>
            </form>
        </section>
    </main>
{% endblock %}


# art_gallery\templates\artworks\detail.html
{% extends 'base.html' %}
{% load static %}
{% load thumbnail %}

{% block title %}Свободная работа{% endblock %}

{% block content %}
<section class="painting-detail">
    <h1>свободные работы</h1>
    <div class="painting-container">
        <!-- Основное изображение -->
        <div class="painting-main">
            {% thumbnail painting.image "800x800" quality=100 as im %}
                <a href="{{ painting.image.url }}">
                    <img src="{{ im.url }}" alt="{{ painting.title }}">
                </a>
        </div>

        <!-- Миниатюры -->
        <div class="painting-thumbnails">
            {% for thumbnail in painting.thumbnails.all %}
                <img src="{{ thumbnail.url }}" alt="{{ painting.title }}" class="thumbnail">
            {% endfor %}
        </div>
    </div>

    <!-- Описание картины -->
    <div class="painting-description">
        <h2>{{ painting.title }}</h2>
        <p>{{ painting.description }}</p>
        <p>{{ painting.material }}, {{ painting.dimensions }}, {{ painting.get_creation_year }}</p>
    </div>
</section>
{% endblock %}


# art_gallery\templates\artworks\free_works.html
{% extends 'base.html' %}
{% load static %}
{% load thumbnail %}

{% block title %}Свободные работы{% endblock %}

{% block content %}
<section class="free-works">
    <header class="hero">
        <h1>свободные работы</h1>
    </header>

    <div class="works-grid">
        {% for painting in paintings %}
        <div class="work-card">
            <a href="{% url 'artworks:detail' painting.id %}">
                {% thumbnail painting.image "300x300" quality=80 as im %}
                    <img src="{{ im.url }}" alt="{{ painting.title }}" class="work-image">

            </a>
            <div class="work-info">
                <p>{{ painting.title }}, {{ painting.material }}, {{ painting.dimensions }}, {{ painting.get_creation_year }}</p>
            </div>
        </div>
        {% endfor %}
    </div>
</section>
{% endblock %}

# art_gallery\templates\artworks\gallery.html
{% extends 'base.html' %}
{% load static %}
{% load thumbnail %}


{% block title %}Галерея{% endblock %}

{% block content %}
<section class="gallery">
    <div class="carousel">
        <button class="carousel-control prev">&lt;</button>
        <div class="carousel-images">
            {% for painting in paintings %}
                <a href="{{ painting.image.url }}">
                    {% thumbnail painting.image "600x600" quality=100 as im %}
                    <img src="{{ im.url }}" alt="{{ painting.title }}" class="carousel-image {% if forloop.first %}active{% endif %}">
                </a>
            {% endfor %}
        </div>
        <button class="carousel-control next">&gt;</button>
    </div>

    <div class="cta">
        <a href="{% url 'artworks:free_works' %}" class="cta-button">смотреть свободные работы</a>
    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const prevButton = document.querySelector('.carousel-control.prev');
        const nextButton = document.querySelector('.carousel-control.next');
        const images = document.querySelectorAll('.carousel-image');
        let current = 0;

        function showImage(index) {
            images.forEach((img, i) => {
                img.classList.toggle('active', i === index);
            });
        }

        prevButton.addEventListener('click', () => {
            current = (current - 1 + images.length) % images.length;
            showImage(current);
        });

        nextButton.addEventListener('click', () => {
            current = (current + 1) % images.length;
            showImage(current);
        });

        // Инициализация
        showImage(current);
    });
</script>

<style>
    .carousel {
        position: relative;
        width: 100%;
        max-width: 800px;
        margin: auto;
        overflow: hidden;
    }

    .carousel-images {
        display: flex;
        transition: transform 0.5s ease-in-out;
    }

    .carousel-image {
        min-width: 100%;
        display: none;
    }

    .carousel-image.active {
        display: block;
    }

    .carousel-control {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(255, 255, 255, 0.7);
        border: none;
        padding: 10px;
        cursor: pointer;
        font-size: 18px;
    }

    .carousel-control.prev {
        left: 10px;
    }

    .carousel-control.next {
        right: 10px;
    }
</style>
{% endblock %}


# art_gallery\templates\artworks\home.html
{% extends 'base.html' %}
{% load static %}

{% block title %}Главная{% endblock %}

{% block content %}
<section class="home">
    <div class="featured-image">
        <img src="{% static 'img/cats.png' %}" alt="Изображение картин">
    </div>
</section>
{% endblock %}

# Структура папок проекта
art_gallery/
    art_gallery/
        __init__.py
        asgi.py
        context_processors.py
        settings.py
        urls.py
        wsgi.py
    artworks/
        migrations/
            __init__.py
        __init__.py
        admin.py
        apps.py
        models.py
        urls.py
        views.py
    media/
        images/
        paintings/
        thumbnails/
    static/
        css/
            styles.css
        img/
    templates/
        artworks/
            about.html
            blog.html
            contacts.html
            detail.html
            free_works.html
            gallery.html
            home.html
        base.html
    .env
    .gitignore
    manage.py

